{"pages":[],"posts":[{"title":"Block","text":"Block在内存上的分配Block如果访问了外部变量，则属于Stack Block Block如果没有访问外部变量，则属于Global Block 对Stack Block执行Copy 操作 则属于Heap Block ARC会有一下情况对Stack Block进行copy操作： 1.Block作为函数值返回 2.Block用strong指针指向 3.Block作为系统函数中比如using block 4.Block在GCD的参数中 Block捕获外部变量局部变量是会被Block捕获。 静态局部变量被Block捕获后是通过指针来传递的。 普通局部变量被捕获后是通过值来传递的。 全局变量不会被Block捕获。 被__block修饰的变量。被Block捕获后，会生成一个结构体。 结构体里有个forwarding指针，指向了结构体。 当Block被copy时，也会对捕获的变量进行copy。 如果捕获的变量是__weak，也不会形成强引用。 Retain修饰的BlockMRC下Block不用retain修饰的原因是，用retain修饰会使引用计数+1，但不会生成新的对象。因此在使用Block时，Block有可能已经被释放。因此需要用copy修饰。ARC，无论strong还是copy，系统都会对Block做copy操作，将栈Block拷贝到堆。","link":"/2021/02/18/block/"},{"title":"AFN学习","text":"AFN2.X版本AFN在进行网络请求时，把网络请求封装成了AFURLConnectionOperation，AFURLConnectionOperation基类是NSOperation，而在AFHTTPRequestOperationManager中创建了一个子线程，通过Runloop会使这个线程保活。而所有请求的发起和回调都会在这个线程执行。 请求的发起时同步的，回调也是同步的。因为所有请求都是在一个线程中发起和回调，如果是异步的那么一定会开启另一条线程。这里有个概念，如果是异步操作那么一定会开启线程那么网络请求岂不变成了同步请求么？不是，因为AFN2.X中的网络请求的是基于NSURLConnection的。NSURLConnection 是被设计成异步发送的，调用了start方法后，NSURLConnection 会新建一些线程用底层的 CFSocket 去发送和接收请求。因此网络请求仍然是异步的。 AFN3.X版本AFN3.X版本取消掉了常驻子线程，网络请求改成基于NSURLSession 而之所以不用常驻子线程，是因为NSURLSession自身是异步请求，同时可以设置回调的OperationQueue，因此通过设置一个OperationQueue实现了和AFN2.X版本同样的效果这里需要注意的是AFN将OperationQueue的maxConcurrentOperationCount设置成了1，意思是将这个OperationQueue设置成串行队列。而AFN2.X因为回调是在同一个线程，因此也是串行回调的。这样做的目的就是保证数据操作的安全性。 这里要注意下maxConcurrentOperationCount设置成1只是将队列设置成串行队列，让Operation串行执行，但是线程是否会开启是由系统管理，有可能开启新线程，也有可能不开启。","link":"/2021/02/18/afn-xue-xi/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2022/03/16/hello-world/"}],"tags":[{"name":"网络","slug":"网络","link":"/tags/%E7%BD%91%E7%BB%9C/"}],"categories":[{"name":"iOS","slug":"iOS","link":"/categories/iOS/"}]}